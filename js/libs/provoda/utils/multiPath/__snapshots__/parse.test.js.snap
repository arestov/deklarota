// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse smoke result should match snapshot for "< @one:state_name < nesting < resource < #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {
    "steps": null,
    "type": "root",
  },
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "nesting",
    ],
    "target_nest_name": "nesting",
  },
  "resource": Object {
    "path": "resource",
    "template": Object {
      "from_parent": undefined,
      "from_root": false,
      "full_usable_string": "resource",
      "parsed": Object {
        "clean_string_parts": Array [
          "resource",
        ],
        "states": null,
        "states_map": null,
      },
    },
  },
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "< state < nesting_name" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "nesting_name",
    ],
    "target_nest_name": "nesting_name",
  },
  "resource": Object {},
  "result_type": "state",
  "state": Object {
    "base": "state",
    "path": "state",
  },
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "< state_name < nesting < resource < #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {
    "steps": null,
    "type": "root",
  },
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "nesting",
    ],
    "target_nest_name": "nesting",
  },
  "resource": Object {
    "path": "resource",
    "template": Object {
      "from_parent": undefined,
      "from_root": false,
      "full_usable_string": "resource",
      "parsed": Object {
        "clean_string_parts": Array [
          "resource",
        ],
        "states": null,
        "states_map": null,
      },
    },
  },
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "< state_name << resource/[:ddaf]/sdf < #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {
    "steps": null,
    "type": "root",
  },
  "nesting": Object {},
  "resource": Object {
    "path": "resource/[:ddaf]/sdf",
    "template": Object {
      "from_parent": undefined,
      "from_root": false,
      "full_usable_string": "resource/[:ddaf]/sdf",
      "parsed": Object {
        "clean_string_parts": Array [
          "resource/",
          "/sdf",
        ],
        "states": Array [
          "ddaf",
        ],
        "states_map": Array [
          Array [
            "ddaf",
            "ddaf",
            undefined,
          ],
        ],
      },
    },
  },
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "< state_name <<" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {},
  "resource": Object {},
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "< state_name <<< #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "$root",
    ],
    "target_nest_name": "$root",
  },
  "resource": Object {},
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "< state_name <<< ^^" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [
      "$parent",
    ],
    "path": Array [
      "$parent",
      "$parent",
    ],
    "target_nest_name": "$parent",
  },
  "resource": Object {},
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "< state_name" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {},
  "resource": Object {},
  "result_type": "state",
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "<< nesting_name << #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [
      "$root",
    ],
    "path": Array [
      "$root",
      "nesting_name",
    ],
    "target_nest_name": "nesting_name",
  },
  "resource": Object {},
  "result_type": "nesting",
  "state": Object {},
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "<< nesting_name << ^^" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [
      "$parent",
      "$parent",
    ],
    "path": Array [
      "$parent",
      "$parent",
      "nesting_name",
    ],
    "target_nest_name": "nesting_name",
  },
  "resource": Object {},
  "result_type": "nesting",
  "state": Object {},
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "<< nesting_name" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "nesting_name",
    ],
    "target_nest_name": "nesting_name",
  },
  "resource": Object {},
  "result_type": "nesting",
  "state": Object {},
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "<<<< #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [],
    "path": Array [
      "$root",
    ],
    "target_nest_name": "$root",
  },
  "resource": Object {},
  "result_type": "nesting",
  "state": Object {},
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "@one:state_name:nest" 1`] = `null`;

exports[`parse smoke result should match snapshot for "@state_name:nest.test" 1`] = `null`;

exports[`parse smoke result should match snapshot for "nesting_name < < ^^" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {
    "base": Array [
      "$parent",
      "$parent",
    ],
    "path": Array [
      "$parent",
      "$parent",
      "nesting_name",
    ],
    "target_nest_name": "nesting_name",
  },
  "resource": Object {},
  "result_type": "nesting",
  "state": Object {},
  "zip_name": "one",
}
`;

exports[`parse smoke result should match snapshot for "resource/[:ddaf]/sdf < #" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {
    "steps": null,
    "type": "root",
  },
  "nesting": Object {},
  "resource": Object {
    "path": "resource/[:ddaf]/sdf",
    "template": Object {
      "from_parent": undefined,
      "from_root": false,
      "full_usable_string": "resource/[:ddaf]/sdf",
      "parsed": Object {
        "clean_string_parts": Array [
          "resource/",
          "/sdf",
        ],
        "states": Array [
          "ddaf",
        ],
        "states_map": Array [
          Array [
            "ddaf",
            "ddaf",
            undefined,
          ],
        ],
      },
    },
  },
  "result_type": null,
  "state": Object {},
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "resource/[:ddaf]/sdf <" 1`] = `
Object {
  "as_string": null,
  "from_base": Object {},
  "nesting": Object {},
  "resource": Object {
    "path": "resource/[:ddaf]/sdf",
    "template": Object {
      "from_parent": undefined,
      "from_root": false,
      "full_usable_string": "resource/[:ddaf]/sdf",
      "parsed": Object {
        "clean_string_parts": Array [
          "resource/",
          "/sdf",
        ],
        "states": Array [
          "ddaf",
        ],
        "states_map": Array [
          Array [
            "ddaf",
            "ddaf",
            undefined,
          ],
        ],
      },
    },
  },
  "result_type": null,
  "state": Object {},
  "zip_name": null,
}
`;

exports[`parse smoke result should match snapshot for "state_name" 1`] = `
SimpleStateAddr {
  "state": Object {
    "base": "state_name",
    "path": "state_name",
  },
}
`;
